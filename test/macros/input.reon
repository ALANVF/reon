point: macro [x y][
	return compose #(
		x: (x)
		y: (y)
	)
]

line: macro [begin end][
	return compose #(
		x1: (pick begin 'x)
		y1: (pick begin 'y)
		x2: (pick end 'x)
		y2: (pick end 'y)
	)
]

#(
	points: [
		(point 0 1)
		(point 2 3)
		#(x: 4 y: 5)
		(line
			point 5 6
			point 7 8)
	]

	compare: [
		(lesser? 1 2)
		(lesser? 2 1.0)
		(lesser? #"a" #"b")
	]
	
	misc: [
		11h
		(join-with "," [1 2 3])
		(copy.part "abcde" 2)
		(copy.part "abcdefg" 2x5)
		(block? [])
		{^"
			add 1 2
		^"}
		(do {^" ^"
			add 1 2
		})
		(do {^" ^" {^" ^" ^^
			add 1 2
		}})
		"^"
			add 1 2
		^""
		(do "
			add 1 2
		")
		(do "^"
			add 1 2
		^"")
	]
)